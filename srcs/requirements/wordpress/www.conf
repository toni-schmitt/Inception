; Start a new pool named 'www'.
; the variable $pool can be used in any directive and will be replaced by the
; pool name ('www' here)
[www]


; Unix user/group of processes
; Note: The user is mandatory. If the group is not set, the default user's group
;       will be used.
user = www-data
group = www-data


; Define Listen mode, FPM supports Unix Socket and TCP Socket
; Purpose: It used to mode connecting mechanism of PHP request from frontend server (like nginx, etc)
; Default Value: TCP Socket
listen = 9000


; Define Process Manager controll mechanism of Child process
; Possible Values: static, dynamic, ondemand
; Describing Values: widely used values are static and dynamic

; static  – a fixed number ( pm.max_children) of child processes
; dynamic – the number of child processes are set dynamically based on the following directives. With this process management, there will be always at least 1 children
; ondemand – no children are created at startup. Children will be forked when new requests will connect
pm = dynamic


; Define Process Manager Maximum children limit
; Purpose: The number of child processes to be created when pm is set to ‘static’ and the maximum number of child processes when pm is set to dynamic or ondemand
; Default Value: 5
pm.max_children = 30


; Define support directives for Process Manager definition
; Purpose: Child process management configuration for FPM, this configuration directives is applicable, when pm is set to dynamic
pm.start_servers = 3
pm.min_spare_servers = 3
pm.max_spare_servers = 10


; Define Maxmium Requests limit for child process
; Purpose: The number of requests each child process should execute before respawning (recreation of child process)
; Default Value: 0 (zero)
; Configuration: For endless request processing specify 0 (zero)
pm.max_requests = 1000



; Recommendation for PHP-FPM monitoring
; Note:
; By default the status page output is formatted as text/plain. Passing either html, xml or json in the query string will return the corresponding
; By default the status page only outputs short status. Passing full in the query string will also return status for each pool process
; For example: /status?full
; Purpose: The URI to view the FPM status page
pm.status_path = /status



; Clear environment in FPM workers
; Prevents arbitrary environment variables from reaching FPM worker processes
; by clearing the environment in workers before env vars specified in this
; pool configuration are added.
; Setting to "no" will make all environment variables available to PHP code
; via getenv(), $_ENV and $_SERVER.
; Default Value: yes
clear_env = no